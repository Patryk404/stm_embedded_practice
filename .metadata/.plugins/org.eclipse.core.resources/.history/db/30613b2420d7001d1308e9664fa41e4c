/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdio.h>
#include <stdint.h>

// This function executes in THREAD MODE of the processor
void generate_interrupt(){
	uint32_t *pSTIR = (uint32_t*) 0xE000EF00;
	uint32_t *pISER0 = (uint32_t*) 0xE000E100;

	// enable IRQ3 interrupt
	*pISER0 |= (1<<3);

	// generate an interrupt from software for IRQ3
	*pSTIR = (3&0x1FF);

}

int main(void)
{
	printf("In thread mode: before interrupt \n");

	generate_interrupt();

	printf("In thread mode again after interrupt \n");
	 /* Loop forever */
	for(;;);
}


void RTC_WKUP_IRQHandler(void){ // generating input and register xpsr for his 9 last bits is changed
	printf("In Handler mode: ISR \n");
}
